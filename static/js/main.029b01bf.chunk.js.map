{"version":3,"sources":["components/Sidey/bork.gif","components/Sidey/diemz.gif","components/Sidey/empty.gif","components/Sidey/friendship.gif","components/Sidey/greetings.gif","components/Sidey/hiphop.gif","components/Sidey/travel.gif","components/Sidey/wallaby.gif","components/Button.jsx","components/Sidey/index.js","components/Distance.jsx","components/System.jsx","components/SearchBar.jsx","hooks/use-system-search.js","hooks/use-debounce.js","components/SystemSearch.jsx","components/RouteDistance.jsx","optimizer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","children","onClick","props","type","className","options","bork","diemz","empty","friendship","greetings","hiphop","travel","wallaby","src","Math","floor","random","length","alt","distance","value","displayType","suffix","decimalScale","thousandSeparator","System","name","x","y","z","isOrigin","onRemove","Distance","SearchBar","placeholder","systemSearch","a","systemName","axios","get","params","showCoordinates","data","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","isSearching","setIsSearching","results","setResults","then","SystemSearch","onCancel","onSystemChosen","searchTerm","setSearchTerm","useSystemSearch","onChange","e","target","onBlur","map","coords","key","mapWithKey","convert","cap","getRouteDistance","reduce","result","optimize","origin","destinations","flow","route","point","index","b","pow","mapHopDistances","sortBy","first","permute","items","find","getRoutePermutations","App","setOrigin","setDestinations","chooseView","mode","setMode","AppView","InitialView","Sidey","OriginPicker","system","OriginView","StopPicker","destination","TripView","RouteDistance","hop","reject","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.029b01bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bork.2b1c8b36.gif\";","module.exports = __webpack_public_path__ + \"static/media/diemz.4f16c0f8.gif\";","module.exports = __webpack_public_path__ + \"static/media/empty.bce677d0.gif\";","module.exports = __webpack_public_path__ + \"static/media/friendship.f339e60f.gif\";","module.exports = __webpack_public_path__ + \"static/media/greetings.b9200209.gif\";","module.exports = __webpack_public_path__ + \"static/media/hiphop.c8a7d619.gif\";","module.exports = __webpack_public_path__ + \"static/media/travel.f9a41121.gif\";","module.exports = __webpack_public_path__ + \"static/media/wallaby.e83a4f50.gif\";","import React from 'react';\n\nconst Button = ({ children, onClick, ...props }) => (\n  <button type=\"button\" className=\"button\" onClick={onClick} {...props}>\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\n\nimport bork from './bork.gif';\nimport diemz from './diemz.gif';\nimport empty from './empty.gif';\nimport friendship from './friendship.gif';\nimport greetings from './greetings.gif';\nimport hiphop from './hiphop.gif';\nimport travel from './travel.gif';\nimport wallaby from './wallaby.gif';\n\nconst options = [\n  bork, diemz, empty, friendship, greetings, hiphop, travel, wallaby\n];\nconst chooseOption = () => options[Math.floor(Math.random() * options.length)];\n\nexport default () => <img className=\"sidey\" src={chooseOption()} alt=\"waiting for user input...\" />;\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\nexport default ({ distance }) => <NumberFormat\n  value={distance}\n  displayType={'text'}\n  suffix={'ly'}\n  decimalScale={2}\n  thousandSeparator={true}\n/>;\n","import React from 'react';\n\nimport Button from './Button';\nimport Distance from './Distance';\n\nconst System = ({ name, x, y, z, isOrigin, distance, onRemove, ...props }) => <div className=\"System\" {...props}>\n  <div className=\"system-meta\">\n    <div className=\"system-meta-id\">\n      {isOrigin && <div className=\"origin-badge\"><span>Origin System</span></div>}\n      <span className=\"system-name\">{name}</span>\n    </div>\n    {distance > 0 && <span className=\"hop-distance\"><Distance distance={distance} /></span>}\n  </div>\n  <div className=\"system-details\">\n    <div className=\"coords\">\n      <span className=\"x-coords\">{x}</span>\n      <span className=\"y-coords\">{y}</span>\n      <span className=\"z-coords\">{z}</span>\n    </div>\n    {onRemove && <Button className=\"remove-button\" onClick={onRemove}>X</Button>}\n  </div>\n</div>;\n\nexport default System;\n","import React from 'react';\n\nconst SearchBar = props => (<input className=\"search-bar\" placeholder=\"Enter system name...\" {...props} />);\n\nexport default SearchBar;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport useDebounce from './use-debounce';\n\nconst systemSearch = async ({ systemName }) => {\n  const { data } = await axios.get('https://www.edsm.net/api-v1/systems', {\n    params: {\n      systemName, showCoordinates: 1\n    },\n  });\n  return data;\n};\n\nexport default (value) => {\n  const systemName = useDebounce(value, 500);\n  const [isSearching, setIsSearching] = useState(false);\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    if (systemName) {\n      setIsSearching(true);\n      systemSearch({ systemName })\n        .then(data => setResults(data))\n        .then(() => setIsSearching(false));\n    } else {\n      setIsSearching(false);\n      setResults([]);\n    }\n  }, [systemName]);\n\n  return [isSearching, results];\n};\n","import { useEffect, useState } from 'react';\n\nexport default (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState();\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => setDebouncedValue(value), delay);\n      return () => clearTimeout(handler);\n    },\n    [value, delay]\n  );\n\n  return debouncedValue;\n};\n","import React, { useState } from 'react';\n\nimport SearchBar from './SearchBar';\nimport System from './System';\n\nimport useSystemSearch from '../hooks/use-system-search';\n\nconst SystemSearch = ({ onCancel, onSystemChosen }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearching, results] = useSystemSearch(searchTerm);\n  return <>\n    <SearchBar\n      onChange={e => setSearchTerm(e.target.value)}\n      onBlur={e => {\n        if (!e.target.value) {\n          onCancel();\n        }\n      }}\n    />\n    {isSearching && <h2>Loading...</h2>}\n    {!isSearching && results.map(({ name, coords }) => <System\n      key={`System-${name}`}\n      name={name}\n      {...coords}\n      onClick={() => onSystemChosen({ name, ...coords })}\n    />)}\n  </>;\n};\n\nexport default SystemSearch;\n","import React from 'react';\nimport Distance from './Distance';\n\nexport default ({ distance }) => <span className=\"Distance\">Round trip: <Distance distance={distance} /></span>;\n","import permute from 'heaps-permute';\nimport { find, first, flow, map, reduce, sortBy } from 'lodash/fp';\n\nconst mapWithKey = map.convert({ cap: false });\n\nexport const calculateDistance = (a, b) => Math.pow((\n  Math.pow((b.x - a.x), 2) + Math.pow((b.y - a.y), 2) + Math.pow((b.z - a.z), 2)\n), .5);\n\nexport const getRoutePermutations = (origin, destinations) => flow(\n  map(({ name }) => name),\n  permute,\n  map(items => [\n    { ...origin, isOrigin: true },\n    ...map(name => find({ name })(destinations))(items),\n    { ...origin, isOrigin: true }])\n)(destinations);\n\nexport const mapHopDistances = route => mapWithKey(\n  (point, index) => index === 0\n    ? { ...point, distance: 0 }\n    : { ...point, distance: calculateDistance(route[index - 1], point) }\n)(route);\n\nexport const getRouteDistance = reduce((result, { distance }) => result + distance, 0);\n\nexport const optimize = (origin, destinations) => flow(\n  map(route => mapHopDistances(route)),\n  map(route => ({ route, distance: getRouteDistance(route) })),\n  sortBy('distance'),\n  first\n)(getRoutePermutations(origin, destinations));\n\nexport default optimize;\n","import React, { useState } from 'react';\nimport { reject } from 'lodash/fp';\n\nimport Button from './components/Button';\nimport Sidey from './components/Sidey';\nimport System from './components/System';\nimport SystemSearch from './components/SystemSearch';\nimport RouteDistance from './components/RouteDistance';\n\nimport optimize from './optimizer';\n\nimport './App.css';\n\nconst App = () => {\n  const [origin, setOrigin] = useState();\n  const [destinations, setDestinations] = useState([]);\n  const chooseView = () => {\n    if (origin) {\n      return destinations.length ? 'showTrip' : 'showOrigin';\n    } else {\n      return 'initial';\n    }\n  };\n  const [mode, setMode] = useState(chooseView());\n\n  const addDestination = destination => setDestinations([...destinations, destination]);\n  const removeDestination = name => setDestinations(reject({ name })(destinations));\n\n  const AppView = ({ children }) => <div className=\"App\">{children}</div>;\n  const InitialView = () => <AppView>\n    <Sidey />\n    <Button onClick={() => setMode('chooseOrigin')}>Set Origin System</Button>\n  </AppView>;\n  const OriginPicker = () => <AppView>\n    <SystemSearch\n      onCancel={() => setMode(chooseView())}\n      onSystemChosen={system => {\n        setOrigin(system);\n        setMode(destinations.length ? 'showTrip' : 'showOrigin');\n      }}\n    />\n  </AppView>;\n  const OriginView = () => <AppView>\n    <System {...origin} isOrigin={true} onRemove={() => setMode('initial')} />\n    <Button onClick={() => setMode('addStop')}>Add Stop</Button>\n  </AppView>\n  const StopPicker = () => <AppView>\n    <SystemSearch\n      onCancel={() => setMode(chooseView())}\n      onSystemChosen={system => {\n        addDestination(system);\n        setMode('showTrip');\n      }}\n    />\n  </AppView>;\n  const TripView = () => {\n    if (destinations.length === 0) {\n      setMode('showOrigin');\n      return <></>;\n    }\n\n    const { distance, route } = optimize(origin, destinations);\n    return <AppView>\n      <RouteDistance distance={distance} />\n      <Button onClick={() => setMode('addStop')}>Add Stop</Button>\n      {route.map((hop, index) => <System\n        key={`hop-${index}`}\n        {...hop}\n        onRemove={() => {\n          if (hop.isOrigin) {\n            setMode('initial');\n          } else {\n            removeDestination(hop.name);\n          }\n        }}\n      />)}\n    </AppView>;\n  };\n\n  switch (mode) {\n    case 'chooseOrigin':\n      return <OriginPicker />;\n    case 'showOrigin':\n      return <OriginView />;\n    case 'addStop':\n      return <StopPicker />;\n    case 'showTrip':\n      return <TripView />;\n    default:\n      return <InitialView />;\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}